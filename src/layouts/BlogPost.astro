---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import Header from '../components/Header.astro';

type Props = CollectionEntry<'blog'>['data'] & {
	lang?: string;
};

const { title, description, pubDate, updatedDate, heroImage, category, tags = [], lang = 'en' } = Astro.props;
---

<html lang={lang} data-theme="light">
	<head>
		<BaseHead title={title} description={description} />
		<script is:inline>
			// Get theme from localStorage or default to light
			const savedTheme = localStorage.getItem('theme');
			document.documentElement.setAttribute('data-theme', savedTheme || 'light');
		</script>
	</head>

	<body>
		<Header />
		<main class="max-w-3xl mx-auto py-12 px-4 sm:px-6 lg:px-8">
			<article>
				<div class="hero-image mb-8 rounded-lg overflow-hidden">
					{heroImage && <img width={1020} height={510} src={heroImage} alt="" />}
				</div>
				<div class="prose lg:prose-xl mx-auto">
					<div>
						<div>
							<FormattedDate date={pubDate} />
							{
								updatedDate && (
									<div class="last-updated-on text-sm text-gray-500 mt-2">
										Last updated on <FormattedDate date={updatedDate} />
									</div>
								)
							}
						</div>
						<h1>{title}</h1>
						
						<!-- Category and Tags -->
						<div class="meta-info mt-4 mb-8">
							{category && (
								<div class="category mb-2">
									<a 
										href={`${lang === 'es' ? '/es' : ''}/blog/category/${category.toLowerCase().replace(/\s+/g, '-')}`}
										class="inline-block bg-blue-100 text-blue-800 text-xs font-medium px-2.5 py-0.5 rounded hover:bg-blue-200 dark:bg-blue-900 dark:text-blue-300 dark:hover:bg-blue-800 transition-colors"
									>
										{category}
									</a>
								</div>
							)}
							{tags.length > 0 && (
								<div class="tags">
									<div class="flex flex-wrap gap-2">
										{tags.map((tag: string) => (
											<a 
												href={`${lang === 'es' ? '/es' : ''}/blog/tag/${tag.toLowerCase().replace(/\s+/g, '-')}`}
												class="inline-block bg-gray-100 text-gray-700 text-xs px-2 py-1 rounded-md hover:bg-gray-200 dark:bg-gray-800 dark:text-gray-300 dark:hover:bg-gray-700 transition-colors"
											>
												#{tag}
											</a>
										))}
									</div>
								</div>
							)}
						</div>
						
						<hr class="my-8 border-t border-gray-300" />
					</div>
					<slot />
				</div>
			</article>
		</main>
		<Footer />
	</body>
</html>
