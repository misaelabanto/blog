---
import { getCollection } from 'astro:content';
import BaseHead from '@/components/BaseHead.astro';
import Header from '@/components/Header.astro';
import Footer from '@/components/Footer.astro';
import FormattedDate from '@/components/FormattedDate.astro';

export async function getStaticPaths() {
	const posts = await getCollection('blog');
	const categories = [...new Set(posts.map(post => post.data.category))];
	
	return categories.map(category => ({
		params: { category: category.toLowerCase().replace(/\s+/g, '-') },
		props: { 
			posts: posts.filter(post => post.data.category === category),
			category 
		}
	}));
}

const { posts, category } = Astro.props;
---

<html lang="en" data-theme="light">
	<head>
		<BaseHead title={`Posts in "${category}" | Blog`} description={`All blog posts in the ${category} category`} />
		<script is:inline>
			const savedTheme = localStorage.getItem('theme');
			document.documentElement.setAttribute('data-theme', savedTheme || 'light');
		</script>
	</head>

	<body>
		<Header />
		<main class="max-w-4xl mx-auto py-12 px-4 sm:px-6 lg:px-8">
			<div class="mb-8">
				<h1 class="text-4xl mb-4">Posts in "{category}"</h1>
				<p class="text-gray-600 dark:text-gray-400">
					{posts.length} {posts.length === 1 ? 'post' : 'posts'} found
				</p>
			</div>

			<div class="grid gap-8">
				{posts.map(post => (
					<article class="bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden">
						{post.data.heroImage && (
							<div class="aspect-video overflow-hidden">
								<img 
									src={post.data.heroImage} 
									alt={post.data.title}
									class="w-full h-full object-cover"
								/>
							</div>
						)}
						<div class="p-6">
							<div class="flex items-center gap-2 text-sm text-gray-500 dark:text-gray-400 mb-2">
								<FormattedDate date={post.data.pubDate} />
								<span>•</span>
								<span class="inline-block bg-blue-100 text-blue-800 text-xs font-medium px-2 py-1 rounded dark:bg-blue-900 dark:text-blue-300">
									{post.data.category}
								</span>
							</div>
							
							<h2 class="text-2xl font-bold mb-3">
								<a 
									href={`/blog/${post.id.replace(/^(en|es)\//, '')}`}
									class="text-gray-900 dark:text-white hover:text-blue-600 dark:hover:text-blue-400 transition-colors"
								>
									{post.data.title}
								</a>
							</h2>
							
							<p class="text-gray-600 dark:text-gray-300 mb-4">{post.data.description}</p>
							
							{post.data.tags.length > 0 && (
								<div class="flex flex-wrap gap-2">
									{post.data.tags.map((tag: string) => (
										<a 
											href={`/blog/tag/${tag.toLowerCase().replace(/\s+/g, '-')}`}
											class="inline-block bg-gray-100 text-gray-700 text-xs px-2 py-1 rounded-md hover:bg-gray-200 dark:bg-gray-700 dark:text-gray-300 dark:hover:bg-gray-600 transition-colors"
										>
											#{tag}
										</a>
									))}
								</div>
							)}
						</div>
					</article>
				))}
			</div>
			
			<div class="mt-12 text-center">
				<a 
					href="/blog" 
					class="inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors"
				>
					← Back to All Posts
				</a>
			</div>
		</main>
		<Footer />
	</body>
</html>
